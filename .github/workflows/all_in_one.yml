name: All tests in one file
on: [workflow_dispatch]
 
jobs:

  Extract_data_from_data_properties_file:
#     strategy:
#           matrix:
#             runner: [ubuntu-latest, ubuntu-18.04]
    name: Exctract_data_from_properties_file
    runs-on: self-hosted
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
#       - name: Set up MATLAB                      # Setup the MATLAB
#         uses: matlab-actions/setup-matlab@v1
      - name: Assign values from properties file
        run: |
          pwd
          ls
          cat data.properties >> $GITHUB_ENV  
          echo ${{env.PATH}}
          
      

#   Artifacts_are_generated:           # Test for checking if artifacts are created or not
#     name: check_if_artifacts_are_generated
#     runs-on: ${{env.runner}}
#     steps:
#       - name: Check out repository               # checkout the repository action
#         uses: actions/checkout@v2
#       - name: Set up MATLAB                      # Setup the MATLAB
#         uses: matlab-actions/setup-matlab@v1
#       - name: Run tests and generate artifacts   # Run MATLAB tests and generate related artifacts
#         uses: matlab-actions/run-tests@v1
#         with:
#           source-folder: src
#           test-results-junit: test-results/results.xml
#           code-coverage-cobertura: code-coverage/coverage.xml
#       - name: Check if artifacts are generated or not
#         run: |                                    # Script code for checking that artifacts are created or not
#            set -e
#            grep -q testSquare test-results/results.xml        
#            grep -v sqNums code-coverage/coverage.xml
           
#   Files_are_not_created_for_incorrect_name:
#     name: Files_are_not_created_for_incorrect_name
#     runs-on: windows-2016
#     steps:
#       - name: Check out repository
#         uses: actions/checkout@v2
#       - name: Set up MATLAB
#         uses: matlab-actions/setup-matlab@v1
#       - name: Run tests and generate artifacts
#         uses: matlab-actions/run-tests@v1
#         with:
#           source-folder: src
#           test-results-junit: test-results/r?esults.xml
#           code-coverage-cobertura: code-coverage/co?verage.xml
#       - name: Check if artifacts are generated or not
#         run: |
#            set -e
#            grep -q testSquare test-results/r?esults.xml
#            grep -c sqNum code-coverage/co?verage.xml
           
#   All_test_picked_with_No_test_folder_given:
#     name: Check_if_all_tests_are_picked_with_no_folder_given
#     runs-on: ${{env.runner}}
#     steps:
#       - name: Check out repository
#         uses: actions/checkout@v2
#       - name: Set up MATLAB
#         uses: matlab-actions/setup-matlab@v1
#       - name: Run tests and generate artifacts
#         uses: matlab-actions/run-tests@v1
#         with:
#           source-folder: src
#           test-results-junit: test-results/results.xml
#           code-coverage-cobertura: code-coverage/coverage.xml
#       - name: check if all the tests are picked or not
#         run: |
#            set -e
#            grep -q testCalc1 test-results/results.xml
#            grep -q testCalc4 test-results/results.xml
#            grep -q testCalc2 test-results/results.xml   
# #          this should  be picked although it has a tag
          
           
#   Tests_can_be_filtered_by_tag:
#     name: Check_if_tests_can_be_filtered_by_TAG
#     runs-on: ${{env.runner}}
#     steps:
#       - name: Check out repository
#         uses: actions/checkout@v2
#       - name: Set up MATLAB
#         uses: matlab-actions/setup-matlab@v1
#       - name: Run tests and generate artifacts
#         uses: matlab-actions/run-tests@v1
#         with:
#           source-folder: src
#           select-by-tag: TestSquare 
#           test-results-junit: test-results/results.xml
#           code-coverage-cobertura: code-coverage/coverage.xml
#       - name: check if tests are filtered by tag
#         run: |
#            set -e
#            grep -q testCalc2 test-results/results.xml
           
           
#   No_tests_are_picked_for_incorrect_tag:
#     name: No_tests_are_picked_for_incorrect_tag
#     runs-on: ${{env.runner}}
#     steps:
#       - name: Check out repository
#         uses: actions/checkout@v2
#       - name: Set up MATLAB
#         uses: matlab-actions/setup-matlab@v1
#       - name: Run tests and generate artifacts
#         uses: matlab-actions/run-tests@v1
#         with:
#           source-folder: src
#           select-by-tag: TestSquareX
#           test-results-junit: test-results/results.xml
#           code-coverage-cobertura: code-coverage/coverage.xml
#       - name: No tests are picked for incorrect tag value
#         run: |
#            set -e
#            grep -c testCalc1 test-results/results.xml
#            grep -c testCalc2 test-results/results.xml
#            grep -c testCalc4 test-results/results.xml
           
           
#   Tests_can_be_filter_by_folder:
#     name: Check_if_tests_can_be_filtered_by_FOLDER
#     runs-on: ${{env.runner}}
#     steps:
#       - name: Check out repository
#         uses: actions/checkout@v2
#       - name: Set up MATLAB
#         uses: matlab-actions/setup-matlab@v1
#       - name: Run tests and generate artifacts
#         uses: matlab-actions/run-tests@v1
#         with:
#           source-folder: src
#           select-by-folder: test/temp
#           test-results-junit: test-results/results.xml
#           code-coverage-cobertura: code-coverage/coverage.xml
#       - name: Check if tests can be filtered by folder
#         run: |
#            set -e
#            grep -q testCalc2 test-results/results.xml
           
#   No_tests_picked_for_incorrect_folder_path:
#     name: Check_if_No_tests_are_picked_for_incorrect_folderpath 
#     runs-on: ${{env.runner}}
#     steps:
#       - name: Check out repository
#         uses: actions/checkout@v2
#       - name: Set up MATLAB
#         uses: matlab-actions/setup-matlab@v1
#       - name: Run tests and generate artifacts
#         uses: matlab-actions/run-tests@v1
#         with:
#           source-folder: src
#           select-by-folder: test/tempp
#           test-results-junit: test-results/results.xml
#           code-coverage-cobertura: code-coverage/coverage.xml
#       - name: Check that no tests are picked for incorrect folder path
#         run: |
#            set -e
#            grep -q testCalc2 test-results/results.xml
           
           
#   Test_and_src_folder_selection_works_together:
#     name: source_and_test_folder_selection_works_together
#     runs-on: ${{env.runner}}
#     steps:
#       - name: Check out repository
#         uses: actions/checkout@v2
#       - name: Set up MATLAB
#         uses: matlab-actions/setup-matlab@v1
#       - name: Run tests and generate artifacts
#         uses: matlab-actions/run-tests@v1
#         with:
#           source-folder: src/folderA
#           select-by-folder: test/temp
#           test-results-junit: test-results/results.xml
#           code-coverage-cobertura: code-coverage/coverage.xml
#       - name: Check that test ans source folder selection works together
#         run: |
#            set -e
#            grep -c testCalc2 test-results/results.xml
#            grep -c sqNum code-coverage/coverage.xml
#            grep -c mulNum code-coverage/coverage.xml
#            grep -c addNum code-coverage/coverage.xml
#            grep -c testCalc1 test-results/results.xml
           
#   Src_folder_and_tag_selection_work_together:
#     name: source_and_TAG_selection_works_together
#     runs-on: ${{env.runner}}
#     steps:
#       - name: Check out repository
#         uses: actions/checkout@v2
#       - name: Set up MATLAB
#         uses: matlab-actions/setup-matlab@v1
#       - name: Run tests and generate artifacts
#         uses: matlab-actions/run-tests@v1
#         with:
#           source-folder: src/folderA
#           select-by-tag: TestSquare
#           test-results-junit: test-results/results.xml
#           code-coverage-cobertura: code-coverage/coverage.xml
#       - name: Check that src folder and tag selection works together
#         run: |
#            set -e
#            grep -c testCalc2 test-results/results.xml
#            grep -c sqNum code-coverage/coverage.xml
#            grep -c mulNum code-coverage/coverage.xml
#            grep -c addNum code-coverage/coverage.xml
#            grep -c testCalc1 test-results/results.xml


#   Code_coverage_uses_only_code_specified_in_source_folder:
#     name: CodeCoverage_Uses_code_under_specified_folder
#     runs-on: ${{env.runner}}
#     steps:
#       - name: Check out repository
#         uses: actions/checkout@v2
#       - name: Set up MATLAB
#         uses: matlab-actions/setup-matlab@v1
#       - name: Run tests and generate artifacts
#         uses: matlab-actions/run-tests@v1
#         with:
#           source-folder: src/folderA; src/folderC/folderE
#           test-results-junit: test-results/results.xml
#           code-coverage-cobertura: code-coverage/coverage.xml
#       - name: Check that code coverage uses only code under the specified folder
#         run: |
#            set -e
#            grep -c sqNum code-coverage/coverage.xml
#            grep -c mulNum code-coverage/coverage.xml
#            grep -c addNum code-coverage/coverage.xml
#            grep -c subnum code-coverage/coverage.xml

           


    
